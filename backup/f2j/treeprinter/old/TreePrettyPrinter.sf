
data PList[A] = Nil
              | Cons A (PList[A])
;

data BTree = Node String PList[BTree];

let concat (x : String) (y : String) : String= 
	x.concat(y)
;

let rec showTree (tree:BTree) : String=
	case tree of 
			Node x xs  			-> concat x (showTrees xs)
and	
showTrees (tree : PList[BTree]) : String =
	case tree of 
			Nil			-> ""
		|   Cons x xs	-> concat (concat (showTree x) ",") (showTrees xs)
;

let tree = Node "aaa" (Cons[BTree] (Node "bbbbb" (Nil[BTree])) (Cons[BTree] (Node "eee" (Nil[BTree])) (Cons[BTree] (Node "ffff" (Nil[BTree])) (Nil[BTree]))))
;
				
showTree tree




