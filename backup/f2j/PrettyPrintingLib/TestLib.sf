-- Test Library
let println (s : String) : Unit = { java.lang.System.out.println(s); () }
;
let print (s : String) : Unit = { java.lang.System.out.print(s); () }
;
type TestFn = {
    name : String,
    fn   : Unit -> Unit
}
;
let fool (x: Unit) (y: Unit): Unit= {
	()
}
;
let rec runTest (test : TestFn) : Unit = {
    let testingPrefix : String = "\u001b[31;1mtesting\u001b[0m\t";
    println testingPrefix.concat(test.name).concat(" :");
    test.fn ();
    println "...check it yourself"
}
and 
runTests (tests: PList[TestFn]): Unit= {
	case tests of 
			Nil 			-> ()
		|	Cons x xs		-> fool (runTest x) (runTests (invoke[PList[TestFn]] xs)) 
}
;
