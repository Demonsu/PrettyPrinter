{-#
    INCLUDE "PrettyPrinterLib.sf"
    INCLUDE "PList.sf"
#-}



-- F2JType definition

data F2JType = F2JNormalType    String PList[F2JType]
             | F2JPairedType    PList[F2JType]
             | F2JFunctionType  F2JType F2JType
;

-- F2JType to Document

let rec showF2JType (ftype: F2JType): Doc=
	case ftype of
			F2JNormalType name params -> text s <> (showF2JTypes params)
		|	F2JPairedType types		  -> text "[" <> showF2JTypes types <> text "]"
		|	F2JFunctionType from to   -> showF2JType from <> text "->" <> showF2JType to
and 
showF2JTypes (ftypelist: PList[F2JType]): Doc=
	case ftypelist of
			Nil








-- Test


