
-- definition
data rec
    F2JBindingBody = F2JLetBindingBody     String PList[F2JType] PList[F2JBindingParam] Maybe[F2JType] F2JExpr
                   | F2JLetRecBindingBody  String PList[F2JType] PList[F2JBindingParam] F2JType        F2JExpr
;

-- example
let rec foldl[A, B] (f : B -> A -> B) (z : B) (l : PList[A]) : B =
    case l of
        Nil             ->      z
     |  Cons x xs       ->      foldl[A, B] f (f z x) (invoke[PList[A]] xs);

foldl 										-> String
[A,B] 										-> PList[F2JType]
(f : B -> A -> B) (z : B) (l : PList[A])	-> PList[F2JBindingParam]
B 											-> F2JType